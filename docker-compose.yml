version: '3'

services:
  app:
    build:
      context: .
    ports:
      - "8070:8070"
    volumes:
      - ./:/app
    command: >
      sh -c "python3 manage.py migrate &&
             python3 manage.py run_data_exceptions &&
             python3 manage.py runserver 0.0.0.0:8070"
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:10-alpine
    environment:
      POSTGRES_USER: huxy
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    env_file:
      - ./.env
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5433"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  redis:
    image: redis:alpine
  celery:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    command: celery -A app worker -l info
    volumes:
      - ./:/app
    env_file:
      - ./.env
    depends_on:
      - app
      - redis

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  celery:
